{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle common errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Handle unauthorized access\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth helper functions\nconst auth = {\n  isVendorLoggedIn: () => {\n    const token = localStorage.getItem('token');\n    const userType = localStorage.getItem('userType');\n    return token && userType === 'vendor';\n  },\n  isCustomerLoggedIn: () => {\n    const token = localStorage.getItem('token');\n    const userType = localStorage.getItem('userType');\n    return token && userType === 'customer';\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userType');\n    window.location.href = '/';\n  }\n};\n\n// Vendor API functions\nexport const vendorAPI = {\n  // Authentication\n  login: async credentials => {\n    try {\n      const response = await api.post('/vendors/login', credentials);\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('userType', 'vendor');\n      }\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  register: data => api.post('/vendors/signup', data),\n  // Profile management\n  getProfile: () => api.get('/vendors/profile'),\n  updateProfile: data => api.put('/vendors/profile', data),\n  getIdCard: () => api.get('/vendors/id-card'),\n  // Product management\n  addProduct: productData => api.post('/products', productData),\n  getProducts: () => api.get('/products/vendor/inventory'),\n  updateProduct: (productId, data) => api.put(`/products/${productId}`, data),\n  deleteProduct: productId => api.delete(`/products/${productId}`),\n  // Order management\n  getOrders: () => api.get('/orders/vendor'),\n  getOrderById: orderId => api.get(`/orders/vendor/${orderId}`),\n  updateOrderStatus: (orderId, status) => api.put(`/orders/${orderId}/status`, {\n    status\n  }),\n  // Dashboard data\n  getDashboardStats: () => api.get('/vendors/dashboard-stats')\n};\n\n// Customer API functions\nexport const customerAPI = {\n  // Authentication\n  login: async credentials => {\n    try {\n      const response = await api.post('/customers/login', credentials);\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('userType', 'customer');\n      }\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  register: data => api.post('/customers/register', data),\n  socialAuth: data => api.post('/customers/social-auth', data),\n  forgotPassword: email => api.post('/customers/forgot-password', {\n    email\n  }),\n  resetPassword: data => api.post('/customers/reset-password', data),\n  // Profile management\n  getProfile: () => api.get('/customers/profile'),\n  updateProfile: data => api.put('/customers/profile', data),\n  // Product browsing\n  getAllProducts: params => api.get('/products', {\n    params\n  }),\n  getProductById: productId => api.get(`/products/${productId}`),\n  getProductsByCategory: (category, params) => api.get(`/products/category/${category}`, {\n    params\n  }),\n  searchProducts: (query, params) => api.get(`/products/search`, {\n    params: {\n      ...params,\n      q: query\n    }\n  }),\n  // Cart management\n  getCart: () => api.get('/cart'),\n  addToCart: data => api.post('/cart/add', data),\n  updateCartItem: (cartItemId, quantity) => api.put(`/cart/${cartItemId}`, {\n    quantity\n  }),\n  removeFromCart: cartItemId => api.delete(`/cart/${cartItemId}`),\n  clearCart: () => api.delete('/cart'),\n  // Order management\n  createOrder: orderData => api.post('/orders', orderData),\n  createInStoreOrder: orderData => api.post('/orders/in-store', orderData),\n  getCustomerOrders: () => api.get('/orders/customer'),\n  getOrderById: orderId => api.get(`/orders/customer/${orderId}`),\n  cancelOrder: orderId => api.put(`/orders/${orderId}/cancel`),\n  submitOrderReview: (orderId, reviewData) => api.post(`/orders/${orderId}/review`, reviewData),\n  // Dashboard data\n  getDashboardStats: () => api.get('/customers/dashboard-stats')\n};\n\n// Public API endpoints (no auth required)\nexport const publicAPI = {\n  getCategories: () => api.get('/categories'),\n  getFeaturedProducts: () => api.get('/products/featured'),\n  getNewArrivals: () => api.get('/products/new-arrivals'),\n  searchProducts: query => api.get('/products/search', {\n    params: {\n      q: query\n    }\n  })\n};\n\n// Export auth helper functions\nexport const {\n  isVendorLoggedIn,\n  isCustomerLoggedIn,\n  logout\n} = auth;\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","auth","isVendorLoggedIn","userType","isCustomerLoggedIn","logout","vendorAPI","login","credentials","post","data","setItem","register","getProfile","get","updateProfile","put","getIdCard","addProduct","productData","getProducts","updateProduct","productId","deleteProduct","delete","getOrders","getOrderById","orderId","updateOrderStatus","getDashboardStats","customerAPI","socialAuth","forgotPassword","email","resetPassword","getAllProducts","params","getProductById","getProductsByCategory","category","searchProducts","query","q","getCart","addToCart","updateCartItem","cartItemId","quantity","removeFromCart","clearCart","createOrder","orderData","createInStoreOrder","getCustomerOrders","cancelOrder","submitOrderReview","reviewData","publicAPI","getCategories","getFeaturedProducts","getNewArrivals"],"sources":["C:/Users/vinay/OneDrive/Desktop/marketconnect/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor to handle common errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Handle unauthorized access\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth helper functions\nconst auth = {\n  isVendorLoggedIn: () => {\n    const token = localStorage.getItem('token');\n    const userType = localStorage.getItem('userType');\n    return token && userType === 'vendor';\n  },\n\n  isCustomerLoggedIn: () => {\n    const token = localStorage.getItem('token');\n    const userType = localStorage.getItem('userType');\n    return token && userType === 'customer';\n  },\n\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userType');\n    window.location.href = '/';\n  }\n};\n\n// Vendor API functions\nexport const vendorAPI = {\n  // Authentication\n  login: async (credentials) => {\n    try {\n      const response = await api.post('/vendors/login', credentials);\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('userType', 'vendor');\n      }\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  \n  register: (data) => api.post('/vendors/signup', data),\n  \n  // Profile management\n  getProfile: () => api.get('/vendors/profile'),\n  updateProfile: (data) => api.put('/vendors/profile', data),\n  getIdCard: () => api.get('/vendors/id-card'),\n  \n  // Product management\n  addProduct: (productData) => api.post('/products', productData),\n  getProducts: () => api.get('/products/vendor/inventory'),\n  updateProduct: (productId, data) => api.put(`/products/${productId}`, data),\n  deleteProduct: (productId) => api.delete(`/products/${productId}`),\n  \n  // Order management\n  getOrders: () => api.get('/orders/vendor'),\n  getOrderById: (orderId) => api.get(`/orders/vendor/${orderId}`),\n  updateOrderStatus: (orderId, status) => api.put(`/orders/${orderId}/status`, { status }),\n  \n  // Dashboard data\n  getDashboardStats: () => api.get('/vendors/dashboard-stats')\n};\n\n// Customer API functions\nexport const customerAPI = {\n  // Authentication\n  login: async (credentials) => {\n    try {\n      const response = await api.post('/customers/login', credentials);\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('userType', 'customer');\n      }\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  \n  register: (data) => api.post('/customers/register', data),\n  socialAuth: (data) => api.post('/customers/social-auth', data),\n  forgotPassword: (email) => api.post('/customers/forgot-password', { email }),\n  resetPassword: (data) => api.post('/customers/reset-password', data),\n  \n  // Profile management\n  getProfile: () => api.get('/customers/profile'),\n  updateProfile: (data) => api.put('/customers/profile', data),\n  \n  // Product browsing\n  getAllProducts: (params) => api.get('/products', { params }),\n  getProductById: (productId) => api.get(`/products/${productId}`),\n  getProductsByCategory: (category, params) => api.get(`/products/category/${category}`, { params }),\n  searchProducts: (query, params) => api.get(`/products/search`, { params: { ...params, q: query } }),\n  \n  // Cart management\n  getCart: () => api.get('/cart'),\n  addToCart: (data) => api.post('/cart/add', data),\n  updateCartItem: (cartItemId, quantity) => api.put(`/cart/${cartItemId}`, { quantity }),\n  removeFromCart: (cartItemId) => api.delete(`/cart/${cartItemId}`),\n  clearCart: () => api.delete('/cart'),\n  \n  // Order management\n  createOrder: (orderData) => api.post('/orders', orderData),\n  createInStoreOrder: (orderData) => api.post('/orders/in-store', orderData),\n  getCustomerOrders: () => api.get('/orders/customer'),\n  getOrderById: (orderId) => api.get(`/orders/customer/${orderId}`),\n  cancelOrder: (orderId) => api.put(`/orders/${orderId}/cancel`),\n  submitOrderReview: (orderId, reviewData) => api.post(`/orders/${orderId}/review`, reviewData),\n  \n  // Dashboard data\n  getDashboardStats: () => api.get('/customers/dashboard-stats')\n};\n\n// Public API endpoints (no auth required)\nexport const publicAPI = {\n  getCategories: () => api.get('/categories'),\n  getFeaturedProducts: () => api.get('/products/featured'),\n  getNewArrivals: () => api.get('/products/new-arrivals'),\n  searchProducts: (query) => api.get('/products/search', { params: { q: query } })\n};\n\n// Export auth helper functions\nexport const { isVendorLoggedIn, isCustomerLoggedIn, logout } = auth;\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}