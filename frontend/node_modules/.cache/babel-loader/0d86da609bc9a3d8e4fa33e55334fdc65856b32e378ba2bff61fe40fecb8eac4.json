{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from 'redux';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { api } from './services/api';\nimport wishlistReducer from './slices/wishlistSlice';\nimport cartReducer from './slices/cartSlice';\nimport authReducer from './slices/authSlice';\nimport uiReducer from './slices/uiSlice';\nimport themeReducer from './slices/themeSlice';\nimport errorReducer from './slices/errorSlice';\n\n// Configure persist\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['auth', 'cart', 'wishlist', 'theme'] // Only persist these reducers\n};\nconst rootReducer = combineReducers({\n  [api.reducerPath]: api.reducer,\n  auth: authReducer,\n  cart: cartReducer,\n  wishlist: wishlistReducer,\n  ui: uiReducer,\n  theme: themeReducer,\n  error: errorReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// Configure store\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE']\n    }\n  }).concat(api.middleware)\n});\n\n// Setup listeners for RTK Query\nsetupListeners(store.dispatch);\nexport const persistor = persistStore(store);\n\n// Export hooks\nexport const useAppDispatch = () => useDispatch();\nexport const useAppSelector = useSelector;\nexport default store;","map":{"version":3,"names":["configureStore","persistStore","persistReducer","storage","combineReducers","setupListeners","useDispatch","useSelector","api","wishlistReducer","cartReducer","authReducer","uiReducer","themeReducer","errorReducer","persistConfig","key","whitelist","rootReducer","reducerPath","reducer","auth","cart","wishlist","ui","theme","error","persistedReducer","store","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","dispatch","persistor","useAppDispatch","useAppSelector"],"sources":["C:/Users/vinay/OneDrive/Desktop/marketconnect/frontend/src/store/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from 'redux';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { api } from './services/api';\nimport wishlistReducer from './slices/wishlistSlice';\nimport cartReducer from './slices/cartSlice';\nimport authReducer from './slices/authSlice';\nimport uiReducer from './slices/uiSlice';\nimport themeReducer from './slices/themeSlice';\nimport errorReducer from './slices/errorSlice';\n\n// Configure persist\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['auth', 'cart', 'wishlist', 'theme'] // Only persist these reducers\n};\n\nconst rootReducer = combineReducers({\n  [api.reducerPath]: api.reducer,\n  auth: authReducer,\n  cart: cartReducer,\n  wishlist: wishlistReducer,\n  ui: uiReducer,\n  theme: themeReducer,\n  error: errorReducer\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// Configure store\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE']\n      }\n    }).concat(api.middleware)\n});\n\n// Setup listeners for RTK Query\nsetupListeners(store.dispatch);\n\nexport const persistor = persistStore(store);\n\n// Export hooks\nexport const useAppDispatch = () => useDispatch();\nexport const useAppSelector = useSelector;\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,eAAe,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,GAAG,QAAQ,gBAAgB;AACpC,OAAOC,eAAe,MAAM,wBAAwB;AACpD,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,YAAY,MAAM,qBAAqB;;AAE9C;AACA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXb,OAAO;EACPc,SAAS,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;AACnD,CAAC;AAED,MAAMC,WAAW,GAAGd,eAAe,CAAC;EAClC,CAACI,GAAG,CAACW,WAAW,GAAGX,GAAG,CAACY,OAAO;EAC9BC,IAAI,EAAEV,WAAW;EACjBW,IAAI,EAAEZ,WAAW;EACjBa,QAAQ,EAAEd,eAAe;EACzBe,EAAE,EAAEZ,SAAS;EACba,KAAK,EAAEZ,YAAY;EACnBa,KAAK,EAAEZ;AACT,CAAC,CAAC;AAEF,MAAMa,gBAAgB,GAAGzB,cAAc,CAACa,aAAa,EAAEG,WAAW,CAAC;;AAEnE;AACA,OAAO,MAAMU,KAAK,GAAG5B,cAAc,CAAC;EAClCoB,OAAO,EAAEO,gBAAgB;EACzBE,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC,iBAAiB,EAAE,mBAAmB;IACzD;EACF,CAAC,CAAC,CAACC,MAAM,CAACzB,GAAG,CAACqB,UAAU;AAC5B,CAAC,CAAC;;AAEF;AACAxB,cAAc,CAACuB,KAAK,CAACM,QAAQ,CAAC;AAE9B,OAAO,MAAMC,SAAS,GAAGlC,YAAY,CAAC2B,KAAK,CAAC;;AAE5C;AACA,OAAO,MAAMQ,cAAc,GAAGA,CAAA,KAAM9B,WAAW,CAAC,CAAC;AACjD,OAAO,MAAM+B,cAAc,GAAG9B,WAAW;AAEzC,eAAeqB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}