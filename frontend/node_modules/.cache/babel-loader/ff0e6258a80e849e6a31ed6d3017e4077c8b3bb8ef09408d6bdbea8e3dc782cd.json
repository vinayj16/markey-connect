{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinay\\\\OneDrive\\\\Desktop\\\\marketconnect\\\\frontend\\\\src\\\\contexts\\\\CartContext.js\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\nexport const CartProvider = ({\n  children\n}) => {\n  const [cartItems, setCartItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load cart items from API on mount\n  useEffect(() => {\n    fetchCartItems();\n  }, []);\n  const fetchCartItems = async () => {\n    try {\n      setLoading(true);\n      const response = await api.get('/cart');\n      setCartItems(response.data);\n      setError(null);\n    } catch (err) {\n      setError('Failed to load cart items');\n      console.error('Error fetching cart:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addToCart = async (product, quantity = 1) => {\n    try {\n      const response = await api.post('/cart/add', {\n        product_id: product.id,\n        quantity\n      });\n      setCartItems(response.data);\n      return true;\n    } catch (err) {\n      console.error('Error adding to cart:', err);\n      throw err;\n    }\n  };\n  const removeFromCart = async productId => {\n    try {\n      const response = await api.delete(`/cart/remove/${productId}`);\n      setCartItems(response.data);\n    } catch (err) {\n      console.error('Error removing from cart:', err);\n      throw err;\n    }\n  };\n  const updateQuantity = async (productId, quantity) => {\n    try {\n      const response = await api.put(`/cart/update/${productId}`, {\n        quantity\n      });\n      setCartItems(response.data);\n    } catch (err) {\n      console.error('Error updating cart:', err);\n      throw err;\n    }\n  };\n  const clearCart = async () => {\n    try {\n      await api.delete('/cart/clear');\n      setCartItems([]);\n    } catch (err) {\n      console.error('Error clearing cart:', err);\n      throw err;\n    }\n  };\n  const getCartTotal = () => {\n    return cartItems.reduce((total, item) => {\n      return total + item.price * item.quantity;\n    }, 0);\n  };\n  const getCartCount = () => {\n    return cartItems.reduce((count, item) => count + item.quantity, 0);\n  };\n  const value = {\n    cartItems,\n    loading,\n    error,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartTotal,\n    getCartCount,\n    refreshCart: fetchCartItems\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\nexport default CartContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","CartContext","useCart","context","Error","CartProvider","children","cartItems","setCartItems","loading","setLoading","error","setError","fetchCartItems","response","get","data","err","console","addToCart","product","quantity","post","product_id","id","removeFromCart","productId","delete","updateQuantity","put","clearCart","getCartTotal","reduce","total","item","price","getCartCount","count","value","refreshCart","Provider","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/vinay/OneDrive/Desktop/marketconnect/frontend/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../utils/api';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Load cart items from API on mount\r\n  useEffect(() => {\r\n    fetchCartItems();\r\n  }, []);\r\n\r\n  const fetchCartItems = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.get('/cart');\r\n      setCartItems(response.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to load cart items');\r\n      console.error('Error fetching cart:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const addToCart = async (product, quantity = 1) => {\r\n    try {\r\n      const response = await api.post('/cart/add', {\r\n        product_id: product.id,\r\n        quantity\r\n      });\r\n      setCartItems(response.data);\r\n      return true;\r\n    } catch (err) {\r\n      console.error('Error adding to cart:', err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const removeFromCart = async (productId) => {\r\n    try {\r\n      const response = await api.delete(`/cart/remove/${productId}`);\r\n      setCartItems(response.data);\r\n    } catch (err) {\r\n      console.error('Error removing from cart:', err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const updateQuantity = async (productId, quantity) => {\r\n    try {\r\n      const response = await api.put(`/cart/update/${productId}`, { quantity });\r\n      setCartItems(response.data);\r\n    } catch (err) {\r\n      console.error('Error updating cart:', err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const clearCart = async () => {\r\n    try {\r\n      await api.delete('/cart/clear');\r\n      setCartItems([]);\r\n    } catch (err) {\r\n      console.error('Error clearing cart:', err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const getCartTotal = () => {\r\n    return cartItems.reduce((total, item) => {\r\n      return total + (item.price * item.quantity);\r\n    }, 0);\r\n  };\r\n\r\n  const getCartCount = () => {\r\n    return cartItems.reduce((count, item) => count + item.quantity, 0);\r\n  };\r\n\r\n  const value = {\r\n    cartItems,\r\n    loading,\r\n    error,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    getCartTotal,\r\n    getCartCount,\r\n    refreshCart: fetchCartItems\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}